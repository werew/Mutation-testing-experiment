<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.squareup.javapoet.JavaFileTest" time="0.032" tests="30" errors="0" skipped="1" failures="0">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.161-b12"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/root/projects/javapoet"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/root/projects/javapoet"/>
    <property name="java.runtime.version" value="1.8.0_161-b12"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="ANSI_X3.4-1968"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="3.13.0-142-generic"/>
    <property name="user.home" value="/root"/>
    <property name="user.timezone" value="Etc/UTC"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="file.encoding" value="ANSI_X3.4-1968"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="user.name" value="root"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.x.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-oracle/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher clean test org.pitest:pitest-maven:mutationCoverage"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_161"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="defaultPackageTypesAreNotImported" classname="com.squareup.javapoet.JavaFileTest" time="0.001"/>
  <testcase name="importStaticForCrazyFormatsWorks" classname="com.squareup.javapoet.JavaFileTest" time="0.003"/>
  <testcase name="noImports" classname="com.squareup.javapoet.JavaFileTest" time="0"/>
  <testcase name="conflictingChildName" classname="com.squareup.javapoet.JavaFileTest" time="0.003"/>
  <testcase name="importStaticMixed" classname="com.squareup.javapoet.JavaFileTest" time="0.002"/>
  <testcase name="importStaticTwice" classname="com.squareup.javapoet.JavaFileTest" time="0.001"/>
  <testcase name="topOfFileComment" classname="com.squareup.javapoet.JavaFileTest" time="0.001"/>
  <testcase name="nestedClassAndSuperclassShareName" classname="com.squareup.javapoet.JavaFileTest" time="0.001"/>
  <testcase name="conflictingAnnotation" classname="com.squareup.javapoet.JavaFileTest" time="0.001"/>
  <testcase name="conflictingImports" classname="com.squareup.javapoet.JavaFileTest" time="0.001"/>
  <testcase name="emptyLinesInTopOfFileComment" classname="com.squareup.javapoet.JavaFileTest" time="0"/>
  <testcase name="skipJavaLangImportsWithConflictingClassLast" classname="com.squareup.javapoet.JavaFileTest" time="0.001"/>
  <testcase name="packageClassConflictsWithNestedClass" classname="com.squareup.javapoet.JavaFileTest" time="0.001"/>
  <testcase name="annotationIsNestedClass" classname="com.squareup.javapoet.JavaFileTest" time="0.001"/>
  <testcase name="annotatedTypeParam" classname="com.squareup.javapoet.JavaFileTest" time="0.002"/>
  <testcase name="packageClassConflictsWithSuperlass" classname="com.squareup.javapoet.JavaFileTest" time="0.001"/>
  <testcase name="skipJavaLangImportsWithConflictingClassFirst" classname="com.squareup.javapoet.JavaFileTest" time="0.001"/>
  <testcase name="classAndSuperclassShareName" classname="com.squareup.javapoet.JavaFileTest" time="0"/>
  <testcase name="importStaticReadmeExample" classname="com.squareup.javapoet.JavaFileTest" time="0.002"/>
  <testcase name="conflictingParentName" classname="com.squareup.javapoet.JavaFileTest" time="0.001"/>
  <testcase name="superclassReferencesSelf" classname="com.squareup.javapoet.JavaFileTest" time="0.001"/>
  <testcase name="importStaticUsingWildcards" classname="com.squareup.javapoet.JavaFileTest" time="0.001"/>
  <testcase name="defaultPackage" classname="com.squareup.javapoet.JavaFileTest" time="0.001"/>
  <testcase name="importStaticDynamic" classname="com.squareup.javapoet.JavaFileTest" time="0">
    <skipped message="addStaticImport doesn&apos;t support members with $L"/>
  </testcase>
  <testcase name="importStaticNone" classname="com.squareup.javapoet.JavaFileTest" time="0.001"/>
  <testcase name="importStaticOnce" classname="com.squareup.javapoet.JavaFileTest" time="0.001"/>
  <testcase name="singleImport" classname="com.squareup.javapoet.JavaFileTest" time="0"/>
  <testcase name="conflictingTypeVariableBound" classname="com.squareup.javapoet.JavaFileTest" time="0.001"/>
  <testcase name="conflictingNameOutOfScope" classname="com.squareup.javapoet.JavaFileTest" time="0.001"/>
  <testcase name="conflictingAnnotationReferencedClass" classname="com.squareup.javapoet.JavaFileTest" time="0.001"/>
</testsuite>